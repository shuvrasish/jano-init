{"version":3,"sources":["Header.js","firebase.js","Cards.js","Profile.js","DynamicCards.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["deferredPrompt","database","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Header","useState","back","setback","useEffect","window","addEventListener","e","preventDefault","auth","onAuthStateChanged","user","Email","currentUser","email","collection","doc","update","installed","FieldValue","arrayUnion","Date","toLocaleString","analytics","logEvent","url","location","href","split","length","history","useHistory","className","IconButton","onClick","push","Profile_Click","fontSize","open","Back_Click","alt","src","prompt","userChoice","then","choiceResult","outcome","console","log","Cards","props","cardsanalytics","arry","state","cards","cardid","id","where","get","querySnapshot","docs","map","data","totaldislikes","totallikes","totalfeedback","totalshare","setState","catch","err","onCollectionUpdate","forEach","categories","heading","image_links","main_category","ns","pageid","reference","sid","subheading","summary","webpage_url","key","liked","includes","disliked","slice","seenCards","likedCards","dislikedCards","Name","unsubscribe","withlogin","onSnapshot","swiped","swipeDirection","direction","RIGHT","totalliked","increment","set","likes","merge","LEFT","totaldisliked","pop","feedback","feedbacks","totalfeedbacks","handleShare","cardheading","cardsubheading","cardsummary","navigator","share","text","shares","totalshares","handleWeb","web","wikiopen","totalwikiopen","convert","value","isNaN","Math","round","toFixed","withoutlogin","orderBy","users","this","name","content","onSwipe","renderButtons","left","right","data-action","replace","React","Component","Profile","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccess","Profile_share","createDoc","displayName","componentDidMount","Helmet","class","photoURL","height","signOut","firebaseAuth","DynamicCards","match","params","withRouter","App","msg","messaging","isSupported","requestPermission","getToken","vapidKey","warn","token","arrayRemove","path","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.6c7acf54.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n//import React, { useEffect } from \"react\";\r\nimport \"./Header.css\";\r\nimport \"./\"\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"firebase/app\"\r\nimport 'firebase/analytics';\r\nimport database from \"./firebase\";\r\n\r\nlet deferredPrompt;\r\n\r\n\r\nfunction Header() {\r\n\r\n    const [back, setback] = useState(false);\r\n    //const [installable, setInstallable] = useState(false);\r\n    useEffect(() => {\r\n\r\n        \r\n        window.addEventListener(\"beforeinstallprompt\", (e) => {\r\n            // Prevent the mini-infobar from appearing on mobile\r\n            e.preventDefault();\r\n            // Stash the event so it can be triggered later.\r\n            deferredPrompt = e;\r\n            // Update UI notify the user they can install the PWA\r\n            //setInstallable(true);\r\n        });\r\n\r\n        window.addEventListener('appinstalled', () => {\r\n\r\n            firebase.auth().onAuthStateChanged(function (user) {\r\n                if (user) {\r\n                    const Email = firebase.auth().currentUser.email\r\n\r\n\r\n                    // this.autocat()\r\n                    database.collection(\"Users\").doc(Email).update(\r\n                        {\r\n                            installed: firebase.firestore.FieldValue.arrayUnion(Date().toLocaleString()),\r\n\r\n                        }\r\n                    )\r\n                    firebase.analytics().logEvent(\"INSTALL Withlogin Success\")\r\n\r\n\r\n\r\n                }\r\n                else {\r\n\r\n\r\n                    database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                        installed: firebase.firestore.FieldValue.arrayUnion(Date().toLocaleString()),\r\n                    })\r\n                    firebase.analytics().logEvent(\"INSTALL Withoutlogin Success\")\r\n\r\n\r\n\r\n\r\n                }\r\n            });\r\n\r\n        });\r\n        const url = window.location.href.split(\"/\");\r\n        const auth = url[url.length - 2];\r\n        if (auth == \"out\" || auth == \"with\") {\r\n            setback(true);\r\n        }\r\n    }, []);\r\n\r\n    const handleInstallClick = (e) => {\r\n        // Hide the app provided install promotion\r\n        firebase.analytics().logEvent(\"Download Clicked\")\r\n        // const Email = firebase.auth().currentUser.email\r\n\r\n        // database.collection(\"Users\").doc(Email).update(\r\n        //     {\r\n        //         installed: firebase.firestore.FieldValue.arrayUnion(Date().toLocaleString()),\r\n\r\n        //     }\r\n        // )\r\n        //setInstallable(false);\r\n        // Show the install prompt\r\n        deferredPrompt.prompt();\r\n        // Wait for the user to respond to the prompt\r\n        deferredPrompt.userChoice.then((choiceResult) => {\r\n            if (choiceResult.outcome === 'accepted') {\r\n                console.log('User accepted the install prompt');\r\n                firebase.analytics().logEvent(\"User accepted the install prompt\")\r\n            } else {\r\n                console.log('User dismissed the install prompt');\r\n                firebase.analytics().logEvent(\"User dismissed the install prompt\")\r\n            }\r\n        });\r\n    };\r\n\r\n    const history = useHistory();\r\n    const handlePerson = () => {\r\n        history.push(\"/profile\");\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                const Email = firebase.auth().currentUser.email\r\n\r\n\r\n                // this.autocat()\r\n                database.collection(\"Users\").doc(Email).update(\r\n                    {\r\n                        Profile_Click: firebase.firestore.FieldValue.arrayUnion(Date().toLocaleString()),\r\n\r\n                    }\r\n                )\r\n                firebase.analytics().logEvent(\"Profile_Click Withlogin\")\r\n\r\n\r\n\r\n            }\r\n            else {\r\n\r\n\r\n                database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                    Profile_Click: firebase.firestore.FieldValue.arrayUnion(Date().toLocaleString()),\r\n                })\r\n                firebase.analytics().logEvent(\"Profile_Click Withoutlogin\")\r\n\r\n\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n    const handleImg = () => {\r\n        history.push(\"/\");\r\n    }\r\n    const handleBack = () => {\r\n        //history.push(\"/profile\");\r\n        window.open(\"http://localhost:3000/profile\", \"_self\") //Profile Page\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                const Email = firebase.auth().currentUser.email\r\n\r\n\r\n                // this.autocat()\r\n                database.collection(\"Users\").doc(Email).update(\r\n                    {\r\n                        Back_Click: firebase.firestore.FieldValue.arrayUnion(Email),\r\n\r\n                    }\r\n                )\r\n                firebase.analytics().logEvent(\"Back_Click Withlogin\")\r\n\r\n\r\n\r\n            }\r\n            else {\r\n\r\n\r\n                database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                    Back_Click: firebase.firestore.FieldValue.arrayUnion(Date().toLocaleString()),\r\n                })\r\n                firebase.analytics().logEvent(\"Back_Click Withoutlogin\")\r\n\r\n\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n\r\n\r\n            \r\n\r\n            {back==false?(\r\n                <IconButton onClick={handlePerson}>\r\n                    <PersonIcon className=\"headericon\" fontSize=\"inherit\" />\r\n                </IconButton>\r\n            ):(\r\n                <IconButton onClick={handleBack}>\r\n                    <ArrowBackIosIcon className=\"headericon\" fontSize=\"inherit\" />\r\n                </IconButton>\r\n            )}\r\n\r\n            <img className=\"headertind\" onClick={handleImg}\r\n                alt=\"Logo\"\r\n                src=\"/logo.png\"\r\n            />\r\n\r\n\r\n            {/* {installable &&\r\n                <button className=\"install-button\" onClick={handleInstallClick}>\r\n                    INSTALL ME\r\n                </button>\r\n            } */}\r\n\r\n            {/* <IconButton onClick={handleMessages}>\r\n                <ChatIcon className=\"headericon\" fontSize=\"inherit\"/>\r\n            </IconButton> */}\r\n\r\n            {/* {installable && */}\r\n            <IconButton onClick={handleInstallClick}>\r\n                <GetAppIcon className=\"headericon\" fontSize=\"inherit\" />\r\n            </IconButton>\r\n            {/* } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nimport firebase from \"firebase\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/analytics\"\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: \"AIzaSyAGXWkwJuJNvc0WU0AOaWr6udLnQLjuIso\",\r\n//   authDomain: \"janoocards.firebaseapp.com\",\r\n//   projectId: \"janoocards\",\r\n//   storageBucket: \"janoocards.appspot.com\",\r\n//   messagingSenderId: \"865820669852\",\r\n//   appId: \"1:865820669852:web:0b9906fdb305b917ee3a59\",\r\n//   measurementId: \"G-4TZQ6W3H6J\"\r\n// };\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyC_PJ7fe-WikPfEpF-eL_qft93gezWfUeA\",\r\n  authDomain: \"swipeekaro.firebaseapp.com\",\r\n  projectId: \"swipeekaro\",\r\n  storageBucket: \"swipeekaro.appspot.com\",\r\n  messagingSenderId: \"110354245418\",\r\n  appId: \"1:110354245418:web:832d427fc6da9882abe053\",\r\n  measurementId: \"G-C27D345JWK\"\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst database = firebaseApp.firestore();\r\n\r\n\r\nexport default database;","import React from \"react\";\r\nimport database from \"./firebase\";\r\nimport \"./Cards.css\";\r\nimport \"./SwipeButtons.css\"\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport firebase from \"firebase/app\"\r\nimport 'firebase/analytics';\r\nimport { Swipeable, direction } from 'react-deck-swiper';\r\nimport { Helmet } from \"react-helmet\";\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nclass Cards extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.withoutlogin = database.collection(\"CardsWithoutLogin\");\r\n        this.withlogin = database.collection(\"CardsWithLogin\").orderBy(\"sid\", \"asc\");\r\n        this.users = database.collection(\"Users\");\r\n        this.unsubscribe = null;\r\n        this.state = {\r\n            cards: [],\r\n            liked: [],\r\n            disliked: [],\r\n            totalshare: 0,\r\n            totalfeedback: 0,\r\n            totallikes: 0,\r\n            totaldislikes: 0\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user === null) {\r\n                this.unsubscribe = this.withoutlogin.onSnapshot(this.onCollectionUpdate)\r\n\r\n                console.log(\"Not Signed In!\")\r\n            }\r\n            else {\r\n                this.seenCards()\r\n                console.log(\"liked\" + this.state.liked)\r\n                console.log(\"Disliked\" + this.state.disliked)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    cardsanalytics = () => {\r\n        console.log(\"Data Refreshed!\")\r\n        var arry = this.state.cards\r\n        console.log(arry)\r\n        var cardid = arry[arry.length - 1].id\r\n        console.log(cardid)\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                console.log(\"In User\")\r\n                database.collection(\"CardsWithLoginAnalytics\").where(\"id\", \"==\", cardid).get()\r\n                    .then(querySnapshot => {\r\n                        //console.log(\"querySnapshot: \", querySnapshot)\r\n                        let totallikes = 0;\r\n                        let totaldislikes = 0;\r\n                        let totalfeedback = 0;\r\n                        let totalshare = 0;\r\n                        querySnapshot.docs.map(doc => {\r\n                            let { totaldislikes, totallikes, totalfeedback, totalshare } = doc.data()\r\n\r\n                            totalshare = totalshare;\r\n                            totalfeedback = totalfeedback;\r\n                            totaldislikes = totaldislikes;\r\n                            totallikes = totallikes;\r\n                            console.log(totalshare)\r\n                            console.log(totalfeedback)\r\n                            console.log(totaldislikes)\r\n                            console.log(totallikes)\r\n                        })\r\n\r\n                        this.setState({\r\n                            totallikes: totallikes,\r\n                            totaldislikes: totaldislikes,\r\n                            totalfeedback: totalfeedback,\r\n                            totalshare: totalshare\r\n                        }, () => { console.log(\"Data Set!\") })\r\n                    }).catch((err) => { console.log(err) });\r\n            }\r\n            else {\r\n                console.log(\"In Without user\")\r\n                database.collection(\"CardsWithoutLoginAnalytics\").where(\"id\", \"==\", cardid).get()\r\n                    .then(querySnapshot => {\r\n                        //console.log(\"querySnapshot: \", querySnapshot)\r\n                        let totallikes = 0;\r\n                        let totaldislikes = 0;\r\n                        let totalfeedback = 0;\r\n                        let totalshare = 0;\r\n                        querySnapshot.docs.map(doc => {\r\n                            let { totaldislikes, totallikes, totalfeedback, totalshare } = doc.data()\r\n\r\n                            totalshare = totalshare;\r\n                            totalfeedback = totalfeedback;\r\n                            totaldislikes = totaldislikes;\r\n                            totallikes = totallikes;\r\n                            console.log(totalshare)\r\n                            console.log(totalfeedback)\r\n                            console.log(totaldislikes)\r\n                            console.log(totallikes)\r\n                        })\r\n                        this.setState({\r\n                            totallikes: totallikes,\r\n                            totaldislikes: totaldislikes,\r\n                            totalfeedback: totalfeedback,\r\n                            totalshare: totalshare\r\n                        }, () => { console.log(\"Data Set!\") })\r\n                    }).catch((err) => { console.log(err) });\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n    onCollectionUpdate = (querySnapshot) => {\r\n        const cards = [];\r\n        firebase.auth().onAuthStateChanged(user => {\r\n            if (user === null) {\r\n                querySnapshot.forEach((doc) => {\r\n                    const { categories, heading, id, image_links, main_category, ns, pageid, reference, sid, subheading, summary, webpage_url } = doc.data();\r\n                    cards.push({\r\n                        key: doc.id,\r\n                        doc, // DocumentSnapshot\r\n                        categories,\r\n                        heading,\r\n                        id,\r\n                        image_links,\r\n                        main_category,\r\n                        ns,\r\n                        pageid,\r\n                        reference,\r\n                        sid,\r\n                        subheading,\r\n                        summary,\r\n                        webpage_url,\r\n                    });\r\n                })\r\n                this.setState({\r\n                    cards: [...this.state.cards, ...cards]\r\n                });\r\n                console.log(\"Cards on screen: \" + cards.length)\r\n                //this.cardsanalytics()\r\n\r\n            } else {\r\n                querySnapshot.forEach((doc) => {\r\n                    const { categories, heading, id, image_links, main_category, ns, pageid, reference, sid, subheading, summary, webpage_url } = doc.data();\r\n                    if (!(this.state.liked.includes(id) || this.state.disliked.includes(id))) {\r\n                        cards.push({\r\n                            key: doc.id,\r\n                            doc, // DocumentSnapshot\r\n                            categories,\r\n                            heading,\r\n                            id,\r\n                            image_links,\r\n                            main_category,\r\n                            ns,\r\n                            pageid,\r\n                            reference,\r\n                            sid,\r\n                            subheading,\r\n                            summary,\r\n                            webpage_url,\r\n                        });\r\n                    }\r\n                })\r\n                //console.log(\"Cards on screen: \"+cards.length)\r\n                this.setState({\r\n                    cards: [...this.state.cards, ...cards.slice(0, 5)]\r\n                });\r\n                console.log(\"Cards on screen: \" + this.state.cards.length)\r\n                //this.cardsanalytics()\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    seenCards = () => {\r\n        console.log(\"Cards Refreshed!\")\r\n        const email = firebase.auth().currentUser.email\r\n        console.log(\"User Available: \" + email)\r\n        database.collection(\"Users\").where(\"Email\", \"==\", email)\r\n            .get()\r\n            .then(querySnapshot => {\r\n                //console.log(\"querySnapshot: \", querySnapshot)\r\n                let likedCards = []\r\n                let dislikedCards = []\r\n                querySnapshot.docs.map(doc => {\r\n                    const { Name, disliked, liked } = doc.data()\r\n                    console.log(\"User Name: \" + Name); // array of cities objects\r\n                    console.log(\"Liked Cards: \" + liked); // array of cities objects\r\n                    console.log(\"Disliked Cards: \" + disliked); // array of cities objects\r\n                    likedCards = [...likedCards, ...(liked || [])]\r\n                    dislikedCards = [...dislikedCards, ...(disliked || [])]\r\n                    return;\r\n                })\r\n                this.setState({\r\n                    liked: [...this.state.liked, ...likedCards],\r\n                    disliked: [...this.state.disliked, ...dislikedCards]\r\n                }, () => { this.unsubscribe = this.withlogin.onSnapshot(this.onCollectionUpdate) })\r\n            }).catch((err) => { console.log(err) });\r\n    }\r\n\r\n    swiped = (swipeDirection) => {\r\n        var arry = this.state.cards\r\n        var cardid = arry[arry.length - 1].id\r\n\r\n        console.log(cardid + \" swiped \" + swipeDirection)\r\n\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                const Email = firebase.auth().currentUser.email\r\n\r\n                if (swipeDirection === direction.RIGHT) {\r\n                    database.collection(\"Users\").doc(Email).update(\r\n                        {\r\n                            liked: firebase.firestore.FieldValue.arrayUnion(cardid),\r\n                            totalliked: firebase.firestore.FieldValue.increment(1)\r\n\r\n                        }\r\n                    )\r\n                    database.collection(\"CardsWithLoginAnalytics\").doc(cardid).set(\r\n                        {\r\n                            id: cardid,\r\n                            likes: firebase.firestore.FieldValue.arrayUnion(Email),\r\n                            totallikes: firebase.firestore.FieldValue.increment(1)\r\n\r\n                        }, { merge: true })\r\n\r\n                    firebase.analytics().logEvent(\"Liked WithLogin\")\r\n\r\n                }\r\n                if (swipeDirection === direction.LEFT) {\r\n                    database.collection(\"Users\").doc(Email).update(\r\n                        {\r\n                            disliked: firebase.firestore.FieldValue.arrayUnion(cardid),\r\n                            totaldisliked: firebase.firestore.FieldValue.increment(1)\r\n                        }\r\n                    )\r\n                    database.collection(\"CardsWithLoginAnalytics\").doc(cardid).set(\r\n                        {\r\n                            id: cardid,\r\n                            likes: firebase.firestore.FieldValue.arrayUnion(Email),\r\n                            totallikes: firebase.firestore.FieldValue.increment(1)\r\n\r\n                        }, { merge: true })\r\n                    firebase.analytics().logEvent(\"DisLiked WithLogin\")\r\n\r\n                }\r\n\r\n            }\r\n            else {\r\n\r\n                if (swipeDirection === direction.RIGHT) {\r\n                    database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                        totalliked: firebase.firestore.FieldValue.increment(1),\r\n                    })\r\n                    database.collection(\"CardsWithoutLoginAnalytics\").doc(cardid).set(\r\n                        {\r\n                            id: cardid,\r\n                            totallikes: firebase.firestore.FieldValue.increment(1)\r\n\r\n                        }, { merge: true })\r\n                    firebase.analytics().logEvent(\"Liked WithoutLogin\")\r\n\r\n                }\r\n                if (swipeDirection === direction.LEFT) {\r\n                    database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                        totaldisliked: firebase.firestore.FieldValue.increment(1),\r\n                    })\r\n                    database.collection(\"CardsWithoutLoginAnalytics\").doc(cardid).set(\r\n                        {\r\n                            id: cardid,\r\n                            totaldislikes: firebase.firestore.FieldValue.increment(1)\r\n\r\n                        }, { merge: true })\r\n                    firebase.analytics().logEvent(\"DisLiked WithoutLogin\")\r\n                }\r\n\r\n            }\r\n\r\n\r\n        })\r\n        arry.pop()\r\n        this.setState({ cards: arry })\r\n        if (this.state.cards.length === 0) {\r\n            console.log(\"line no: 211\")\r\n\r\n            firebase.auth().onAuthStateChanged(user => {\r\n                if (user === null) {\r\n                    window.open(window.location.href + \"profile\", \"_self\") //Profile Page\r\n                }\r\n                else {\r\n                    this.seenCards() //Card refresh\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n\r\n    feedback = () => {\r\n        var arry = this.state.cards\r\n        var cardid = arry[arry.length - 1].id\r\n\r\n\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                const Email = firebase.auth().currentUser.email\r\n                database.collection(\"Users\").doc(Email).update(\r\n                    {\r\n                        feedback: firebase.firestore.FieldValue.increment(1)\r\n                    }\r\n                )\r\n                database.collection(\"CardsWithLoginAnalytics\").doc(cardid).set(\r\n                    {\r\n                        feedbacks: firebase.firestore.FieldValue.arrayUnion(Email),\r\n                        totalfeedbacks: firebase.firestore.FieldValue.increment(1)\r\n\r\n                    }, { merge: true })\r\n                console.log(cardid + \" feedback \")\r\n\r\n                firebase.analytics().logEvent(\"Feedback WithLogin\")\r\n            }\r\n            else {\r\n                database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                    feedback: firebase.firestore.FieldValue.increment(1)\r\n                })\r\n                database.collection(\"CardsWithoutLoginAnalytics\").doc(cardid).set(\r\n                    {\r\n                        totalfeedbacks: firebase.firestore.FieldValue.increment(1)\r\n\r\n                    }, { merge: true })\r\n                console.log(cardid + \" feedback \")\r\n                firebase.analytics().logEvent(\"Feedback WithoutLogin\")\r\n            }\r\n        })\r\n    }\r\n\r\n    handleShare = () => {\r\n        var arry = this.state.cards\r\n        var cardheading = arry[arry.length - 1].heading\r\n        var cardsubheading = arry[arry.length - 1].subheading\r\n        var cardsummary = arry[arry.length - 1].summary\r\n        var cardid = arry[arry.length - 1].id\r\n\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                const Email = firebase.auth().currentUser.email\r\n                if (navigator.share) {\r\n                    const text = \"*\" + cardheading + \"*\" + \"%0a```\" + cardsubheading + \"```%0a\" + \"%0a_\" + cardsummary + \"_\" + \"%0a*Visit:* https://swipeekaro.web.app/card/with/\" + cardid\r\n                    window.open(\"whatsapp://send?text=\" + text)\r\n                }\r\n                database.collection(\"Users\").doc(Email).update(\r\n                    {\r\n                        share: firebase.firestore.FieldValue.increment(1)\r\n                    }\r\n                )\r\n                database.collection(\"CardsWithLoginAnalytics\").doc(cardid).set(\r\n                    {\r\n                        shares: firebase.firestore.FieldValue.arrayUnion(Email),\r\n                        totalshares: firebase.firestore.FieldValue.increment(1)\r\n\r\n                    }, { merge: true })\r\n                firebase.analytics().logEvent(\"Share WithLogin\")\r\n            }\r\n            else {\r\n                if (navigator.share) {\r\n                    const text = \"*\" + cardheading + \"*\" + \"%0a```\" + cardsubheading + \"```%0a\" + \"%0a_\" + cardsummary + \"_\" + \"%0a*Visit:* https://swipeekaro.web.app/card/out/\" + cardid\r\n                    window.open(\"whatsapp://send?text=\" + text)\r\n                }\r\n                database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                    share: firebase.firestore.FieldValue.increment(1)\r\n                })\r\n                database.collection(\"CardsWithoutLoginAnalytics\").doc(cardid).set(\r\n                    {\r\n                        totalshares: firebase.firestore.FieldValue.increment(1)\r\n\r\n                    }, { merge: true })\r\n                firebase.analytics().logEvent(\"Share WithoutLogin\")\r\n            }\r\n        })\r\n    };\r\n\r\n    handleWeb = () => {\r\n        var arry = this.state.cards\r\n        var web = arry[arry.length - 1].webpage_url\r\n        var cardid = arry[arry.length - 1].id\r\n        console.log(web)\r\n        window.open(web, \"_blank\")\r\n\r\n\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                const Email = firebase.auth().currentUser.email\r\n                database.collection(\"Users\").doc(Email).update(\r\n                    {\r\n                        wikiopen: firebase.firestore.FieldValue.increment(1)\r\n                    }\r\n                )\r\n                database.collection(\"CardsWithLoginAnalytics\").doc(cardid).set(\r\n                    {\r\n                        wikiopen: firebase.firestore.FieldValue.arrayUnion(Email),\r\n                        totalwikiopen: firebase.firestore.FieldValue.increment(1)\r\n\r\n                    }, { merge: true })\r\n                firebase.analytics().logEvent(\"Share WithLogin\")\r\n            }\r\n            else {\r\n                database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n                    share: firebase.firestore.FieldValue.increment(1)\r\n                })\r\n                database.collection(\"CardsWithoutLoginAnalytics\").doc(cardid).set(\r\n                    {\r\n                        totalwikiopen: firebase.firestore.FieldValue.increment(1)\r\n\r\n                    }, { merge: true })\r\n                firebase.analytics().logEvent(\"Share WithoutLogin\")\r\n            }\r\n        })\r\n    };\r\n    convert = (value) => {\r\n        if (isNaN(value)) return value;\r\n\r\n        if (value < 9999) {\r\n            return value;\r\n        }\r\n\r\n        if (value < 1000000) {\r\n            return Math.round(value / 1000) + \"K\";\r\n        }\r\n        if (value < 10000000) {\r\n            return (value / 1000000).toFixed(2) + \"M\";\r\n        }\r\n\r\n        if (value < 1000000000) {\r\n            return Math.round((value / 1000000)) + \"M\";\r\n        }\r\n\r\n        if (value < 1000000000000) {\r\n            return Math.round((value / 1000000000)) + \"B\";\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                {this.state.cards.map((cards) =>\r\n                    <div key={cards.id} id={cards.id} >\r\n                        {/* <Helmet>\r\n                            <meta charSet=\"utf-8\" />\r\n                            <title>{cards.heading}</title>\r\n                            <meta name=\"description\" content={cards.subheading} />\r\n                        </Helmet> */}\r\n                        <MetaTags>\r\n                            <title>{cards.heading}</title>\r\n                            <meta name=\"description\" content={cards.subheading} />\r\n                        </MetaTags>\r\n                        <Swipeable\r\n                            onSwipe={this.swiped}\r\n                            renderButtons={({ left, right }) => (\r\n                                <div className=\"btn\">\r\n                                    <div className=\"swipeButtons\">\r\n                                        <IconButton className=\"swipeButtons_rep\" href=\"https://docs.google.com/forms/u/2/d/e/1FAIpQLSdzFp8LdIP4cOHMs6mMSXXALHm1n-DXo1HHxQPBM8SYX96n7Q/viewform?embedded=true\" onClick={this.feedback} >\r\n                                            <FeedbackIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n\r\n                                        <IconButton className=\"swipeButtons_canc\" onClick={left}>\r\n                                            <CancelIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"swipeButtons_web\" onClick={this.handleWeb} >\r\n                                            <LanguageIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"swipeButtons_fav\" onClick={right} >\r\n                                            <FavoriteIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"swipeButtons_what\" onClick={this.handleShare} data-action=\"share/whatsapp/share\">\r\n                                            <ShareIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            <div className=\"card\"  >\r\n                                <div className=\"buttonFalse\">\r\n                                    <img src={cards.image_links[0]} alt={cards.heading} />\r\n                                </div>\r\n                                <div className=\"post-content\">\r\n                                    <div className=\"category\"><mark className=\"highlight\"> {\"  #\"+cards.main_category+\"  \"} </mark></div>\r\n                                    <h1 className=\"title\">{cards.heading}</h1>\r\n                                    <div className=\"sub_title\">\r\n                                        <p>{cards.subheading}</p>\r\n                                    </div>\r\n                                    {/* <div className=\"cardanalytics\">\r\n\r\n                                        <div className=\"analytics\">\r\n                                            <div className=\"like\">\r\n\r\n                                                <FavoriteIcon className=\"swipeButtons_fav\" fontSize=\"small\" />\r\n                                                <h3>{this.convert(this.state.totallikes)}</h3>\r\n                                            </div>\r\n                                            <div className=\"dislike\">\r\n                                                <CancelIcon className=\"swipeButtons_canc\" fontSize=\"small\" />\r\n                                                <h3>{this.convert(this.state.totaldislikes)}</h3>\r\n                                            </div>\r\n                                            <div className=\"whatsapp\">\r\n                                                <ShareIcon className=\"swipeButtons_what\" fontSize=\"small\" />\r\n                                                <h3>{this.convert(this.state.totalshare)}</h3>\r\n                                            </div>\r\n                                            <div className=\"feedback\">\r\n                                                <FeedbackIcon className=\"swipeButtons_rep\" fontSize=\"small\" />\r\n                                                <h3>{this.convert(this.state.totalfeedback)}</h3>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div> */}\r\n                                    <hr className=\"solid\"></hr>\r\n\r\n                                    <p className=\"descriptionn\">{cards.summary.replace(/@n/gi, '\\n\\n•')}<br /><br /><b>{cards.reference}</b></p>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Swipeable>\r\n\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;","import \"./Profile.css\";\r\nimport \"./\"\r\nimport React, { Component } from \"react\"\r\nimport firebase from \"firebase\"\r\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\r\nimport database from \"./firebase\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\n\r\n\r\nclass Profile extends Component {\r\n  state = {\r\n    isSignedIn: false,\r\n    liked: 0,\r\n    disliked: 0,\r\n    totalshare: 0,\r\n    totalfeedback: 0\r\n  }\r\n  uiConfig = {\r\n    signInFlow: \"popup\",\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.TwitterAuthProvider.PROVIDER_ID,\r\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n\r\n    ],\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n    }\r\n  }\r\n\r\n  users = () => {\r\n    console.log(\"Cards Refreshed!\")\r\n    const email = firebase.auth().currentUser.email\r\n    console.log(\"User Available: \" + email)\r\n    database.collection(\"Users\").where(\"Email\", \"==\", email)\r\n      .get()\r\n      .then(querySnapshot => {\r\n        //console.log(\"querySnapshot: \", querySnapshot)\r\n        let likedCards;\r\n        let dislikedCards;\r\n        let totalfeedback;\r\n        let totalshare;\r\n        querySnapshot.docs.map(doc => {\r\n          const { Name, totaldisliked, totalliked, feedback, share } = doc.data()\r\n          console.log(\"User Name: \" + Name); // array of cities objects\r\n          console.log(\"Liked Cards: \" + totalliked); // array of cities objects\r\n          console.log(\"Disliked Cards: \" + totaldisliked); // array of cities objects\r\n          likedCards = totalliked;\r\n          dislikedCards = totaldisliked;\r\n          totalfeedback = feedback;\r\n          totalshare = share;\r\n          return;\r\n        })\r\n        this.setState({\r\n          liked: likedCards,\r\n          disliked: dislikedCards,\r\n          totalshare: totalshare,\r\n          totalfeedback: totalfeedback\r\n        }, () => { console.log(\"Data Set!\") })\r\n      }).catch((err) => { console.log(err) });\r\n  }\r\n  handleShare = () => {\r\n    if (navigator.share) {\r\n      const text = \"*Wisdom is knowing what you don't know - Socrates* Use Jano app to refresh and discover new topics. Quickly read about them and update your knowledge in idle time. *Visit:* https://janoocards.web.app/\"\r\n      window.open(\"whatsapp://send?text=\" + text)\r\n    }\r\n    firebase.auth().onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        const Email = firebase.auth().currentUser.email\r\n        database.collection(\"Users\").doc(Email).update(\r\n          {\r\n            Profile_share: firebase.firestore.FieldValue.increment(1)\r\n          }\r\n        )\r\n        firebase.analytics().logEvent(\"Profile_share WithLogin\")\r\n      }\r\n      else {\r\n        database.collection(\"WithoutLoginAnalytics\").doc(\"WithoutLogin\").update({\r\n          Profile_share: firebase.firestore.FieldValue.increment(1)\r\n        })\r\n        firebase.analytics().logEvent(\"Profile_share WithoutLogin\")\r\n      }\r\n    })\r\n  };\r\n\r\n  createDoc = () => {\r\n    const Name = firebase.auth().currentUser.displayName\r\n    const Email = firebase.auth().currentUser.email\r\n    database.collection(\"Users\").doc(Email).set({\r\n      Name: Name,\r\n      Email: Email,\r\n      // liked: [],\r\n      // disliked: [],\r\n      // totalliked: 0,\r\n      // totaldisliked: 0,\r\n\r\n    }, { merge: true })\r\n    console.log(\"New Document Created. \")\r\n    this.users()\r\n  }\r\n  convert = (value) => {\r\n    if (isNaN(value)) return value;\r\n\r\n    if (value < 9999) {\r\n      return value;\r\n    }\r\n\r\n    if (value < 1000000) {\r\n      return Math.round(value / 1000) + \"K\";\r\n    }\r\n    if (value < 10000000) {\r\n      return (value / 1000000).toFixed(2) + \"M\";\r\n    }\r\n\r\n    if (value < 1000000000) {\r\n      return Math.round((value / 1000000)) + \"M\";\r\n    }\r\n\r\n    if (value < 1000000000000) {\r\n      return Math.round((value / 1000000000)) + \"B\";\r\n    }\r\n\r\n  }\r\n\r\n  componentDidMount = () => {\r\n\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ isSignedIn: !!user })\r\n      console.log(\"user\" + user)\r\n    })\r\n\r\n    firebase.auth().onAuthStateChanged(user => {\r\n\r\n      if (user == null) {\r\n        console.log(\"Inside Function user null\");\r\n      }\r\n      else {\r\n        this.createDoc()\r\n      }\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"App\">\r\n        <Helmet>\r\n          <title>Profile</title>\r\n          <meta name=\"description\" content=\"JanooCards Profile\" />\r\n        </Helmet>\r\n        {this.state.isSignedIn ? (\r\n\r\n          <div className=\"tinderCards_cardContainer\">\r\n\r\n            <div className=\"cardlogin\">\r\n              <div class=\"imgcontainer\">\r\n\r\n\r\n                {firebase.auth().currentUser.photoURL === null ? (\r\n                  <img src=\"/logo.png\" alt=\"Avatar\" height=\"100px\" class=\"avatar\"></img>\r\n                )\r\n                  : (\r\n                    <img src={firebase.auth().currentUser.photoURL} alt=\"Avatar\" height=\"100px\" class=\"avatar\"></img>\r\n                  )}\r\n\r\n              </div>\r\n\r\n\r\n              <h1 class=\"name\"> Hi, {firebase.auth().currentUser.displayName}</h1>\r\n              <div class=\"signedintext\">\r\n\r\n                You are signed in!\r\n\r\n                <br />\r\n                \r\n                <div className=\"analytics\">\r\n                  <div className=\"like\">\r\n\r\n                    <FavoriteIcon className=\"swipeButtons_fav\" fontSize=\"large\" />\r\n                    <h3>{this.convert(this.state.liked)}</h3>\r\n                  </div>\r\n                  <div className=\"dislike\">\r\n                    <CancelIcon className=\"swipeButtons_canc\" fontSize=\"large\" />\r\n                    <h3>{this.convert(this.state.disliked)}</h3>\r\n                  </div>\r\n                  <div className=\"whatsapp\">\r\n                    <ShareIcon className=\"swipeButtons_what\" fontSize=\"large\" />\r\n                    <h3>{this.convert(this.state.totalshare)}</h3>\r\n                  </div>\r\n                  <div className=\"feedback\">\r\n                    <FeedbackIcon className=\"swipeButtons_rep\" fontSize=\"large\" />\r\n                    <h3>{this.convert(this.state.totalfeedback)}</h3>\r\n                  </div>\r\n                </div>\r\n\r\n               \r\n                <br />\r\n\r\n                <h2 class=\"email\"> If you liked the experience so far, please share it in your network and help us reach more learners. 🙏</h2>\r\n                <button class=\"buttonn\" onClick={() => firebase.auth().signOut()}><b>SIGNOUT</b></button>\r\n                <button class=\"share\" onClick={this.handleShare} data-action=\"share/whatsapp/share\"><b>INVITE</b></button>\r\n              </div>\r\n              {/* <h1 class=\"name\"> {firebase.auth().currentUser.uid}</h1> */}\r\n              {/* <h2 class=\"email\"> {firebase.auth().currentUser.email}</h2> */}\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        )\r\n          : (\r\n            <div className=\"tinderCards_cardContainer\">\r\n\r\n              <div className=\"cardlogin\">\r\n                <div class=\"imgcontainer\">\r\n                  <img src=\"/logo.png\" alt=\"Avatar\" height=\"100px\" class=\"avatar\"></img>\r\n                </div>\r\n                <div class=\"signintext\">Sign-in to unlock full version !🥳\r\n                </div>\r\n                <StyledFirebaseAuth\r\n                  uiConfig={this.uiConfig}\r\n                  firebaseAuth={firebase.auth()}\r\n                />\r\n\r\n              </div>\r\n\r\n\r\n            </div>\r\n          )}\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport database from \"./firebase\";\r\nimport \"./Cards.css\";\r\nimport \"./SwipeButtons.css\"\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport 'firebase/analytics';\r\nimport { Swipeable} from 'react-deck-swiper';\r\nimport { Helmet } from \"react-helmet\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport MetaTags from 'react-meta-tags';\r\n\r\nclass DynamicCards extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.unsubscribe = null;\r\n        this.state = {\r\n            cards: [],\r\n        };\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const cardid = this.props.match.params.id;\r\n        const auth = this.props.match.params.auth;\r\n        const cards = [];\r\n        console.log(this.props.match.params.id)\r\n        if (auth == \"with\") {\r\n            console.log(\"With\")\r\n            database.collection(\"CardsWithLogin\").where(\"id\", \"==\", cardid).get().then(querySnapshot => {\r\n                querySnapshot.docs.map(doc => {\r\n                    const { categories, heading, id, image_links, main_category, ns, pageid, reference, sid, subheading, summary, webpage_url } = doc.data();\r\n\r\n                    cards.push({\r\n                        key: doc.id,\r\n                        doc, // DocumentSnapshot\r\n                        categories,\r\n                        heading,\r\n                        id,\r\n                        image_links,\r\n                        main_category,\r\n                        ns,\r\n                        pageid,\r\n                        reference,\r\n                        sid,\r\n                        subheading,\r\n                        summary,\r\n                        webpage_url,\r\n                    });\r\n                })\r\n                this.setState({\r\n                    cards: [...this.state.cards, ...cards]\r\n                });\r\n            });\r\n\r\n        }\r\n        if (auth == \"out\") {\r\n            console.log(\"Out\")\r\n            database.collection(\"CardsWithoutLogin\").where(\"id\", \"==\", cardid).get().then(querySnapshot => {\r\n                querySnapshot.docs.map(doc => {\r\n                    const { categories, heading, id, image_links, main_category, ns, pageid, reference, sid, subheading, summary, webpage_url } = doc.data();\r\n\r\n                    cards.push({\r\n                        key: doc.id,\r\n                        doc, // DocumentSnapshot\r\n                        categories,\r\n                        heading,\r\n                        id,\r\n                        image_links,\r\n                        main_category,\r\n                        ns,\r\n                        pageid,\r\n                        reference,\r\n                        sid,\r\n                        subheading,\r\n                        summary,\r\n                        webpage_url,\r\n                    });\r\n                })\r\n                this.setState({\r\n                    cards: [...this.state.cards, ...cards]\r\n                });\r\n            });\r\n        }\r\n\r\n    }\r\n     \r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n\r\n                {this.state.cards.map((cards) =>\r\n                    <div key={cards.id} id={cards.id} >\r\n                        {/* <Helmet>\r\n                            <title>{cards.heading}</title>\r\n                            <meta name=\"description\" content={cards.subheading} />\r\n                        </Helmet> */}\r\n                        <MetaTags>\r\n                            <title>{cards.heading}</title>\r\n                            <meta name=\"description\" content={cards.subheading} />\r\n                        </MetaTags>\r\n                        <Swipeable\r\n\r\n                            renderButtons={({ left, right }) => (\r\n                                <div className=\"btn\">\r\n                                    <div className=\"swipeButtons\">\r\n                                        <IconButton className=\"swipeButtons_canc\" onClick={left}>\r\n                                            <CancelIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"swipeButtons_fav\" onClick={right} >\r\n                                            <FavoriteIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"swipeButtons_rep\" href=\"https://docs.google.com/forms/u/2/d/e/1FAIpQLSdzFp8LdIP4cOHMs6mMSXXALHm1n-DXo1HHxQPBM8SYX96n7Q/viewform?embedded=true\" onClick={this.feedback} >\r\n                                            <FeedbackIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"swipeButtons_what\" onClick={this.handleShare} data-action=\"share/whatsapp/share\">\r\n                                            <WhatsAppIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n                                        <IconButton className=\"swipeButtons_web\" onClick={this.handleWeb} >\r\n                                            <LanguageIcon fontSize=\"large\" />\r\n                                        </IconButton>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                        >\r\n                            <div className=\"card\"  >\r\n                                <div className=\"buttonFalse\">\r\n                                    <img src={cards.image_links[0]} alt={cards.heading} />\r\n                                </div>\r\n                                <div className=\"post-content\">\r\n                                    <div className=\"category\">#{cards.main_category}</div>\r\n                                    <h1 className=\"title\">{cards.heading}</h1>\r\n                                    <div className=\"sub_title\">\r\n                                        <p>{cards.subheading}</p>\r\n                                    </div>\r\n                                    <hr className=\"solid\"></hr>\r\n\r\n                                    <p className=\"description\">{cards.summary.replace(/@n/gi, '\\n\\n•')}<br /><br /><b>{cards.reference}</b></p>\r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                        </Swipeable>\r\n\r\n                    </div>\r\n                )}\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(DynamicCards);","import React from \"react\";\r\nimport Header from './Header';\r\nimport './App.css';\r\nimport Cards from \"./Cards\";\r\nimport Profile from \"./Profile\"\r\nimport DynamicCards from \"./DynamicCards\"\r\nimport 'firebase/analytics';\r\nimport database from \"./firebase\";\r\nimport firebase from \"firebase/app\"\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n  \r\n  React.useEffect(() => {\r\n    let msg = null\r\n    if (firebase.messaging.isSupported()) {\r\n      msg = firebase.messaging()\r\n      msg.requestPermission().then(() => {\r\n        console.log()\r\n        return msg.getToken({ vapidKey: \"BNr6t72DsL2tuv-9_pcEhQqgQv-A1Irqpaohv5k48vC2Wg-Hf58bORmBK6g8adqT4hHOTC7IXaVr_Yjl1Vkh9Oc\" });\r\n      }).then((data) => {\r\n        console.warn(\"token\", data)\r\n\r\n        if (firebase.auth().currentUser == null) {\r\n          database.collection(\"TokenWithoutLogin\").doc(\"TokenWithoutLogin\").update(\r\n            {\r\n              token: firebase.firestore.FieldValue.arrayUnion(data),\r\n            }\r\n          )\r\n        }\r\n        else {\r\n          console.log(firebase.auth().currentUser.email)\r\n          database.collection(\"Users\").doc(firebase.auth().currentUser.email).update(\r\n            {\r\n              token: data\r\n\r\n            }\r\n          )\r\n          database.collection(\"TokenWithoutLogin\").doc(\"TokenWithoutLogin\").update(\r\n            {\r\n              token: firebase.firestore.FieldValue.arrayRemove(data),\r\n            }\r\n          )\r\n        }\r\n      })\r\n    } else {\r\n      //alert('no-support :(')\r\n    }\r\n\r\n    // const msg = firebase.messaging()\r\n\r\n\r\n\r\n  })\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/card/:auth/:id\">\r\n            <Header />\r\n            <DynamicCards />\r\n          </Route>\r\n          <Route path=\"/profile\">\r\n            <Header />\r\n            <Profile />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Header />\r\n            <Cards />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}